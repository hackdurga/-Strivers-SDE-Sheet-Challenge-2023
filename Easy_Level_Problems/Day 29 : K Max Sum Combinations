#include <bits/stdc++.h>
using namespace std;

vector<int> kMaxSumCombination(vector<int>& a, vector<int>& b, int n, int k) {
    // Sorting the arrays in descending order
    sort(a.begin(), a.end(), greater<int>());
    sort(b.begin(), b.end(), greater<int>());

    priority_queue<int, vector<int>, greater<int>> pq;

    // Adding the maximum sum combinations to the priority queue
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            int sum = a[i] + b[j];
            if (pq.size() < k) {
                pq.push(sum);
            } else if (sum > pq.top()) {
                pq.pop();
                pq.push(sum);
            }
        }
    }

    // Storing the k largest sums in a vector
    vector<int> result(k);
    for (int i = k - 1; i >= 0; i--) {
        result[i] = pq.top();
        pq.pop();
    }

    return result;
}
