#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void backtrack(vector<int>& arr, int index, vector<int>& current, vector<vector<int>>& subsets) {
    subsets.push_back(current);

    for (int i = index; i < arr.size(); i++) {
        // Skip duplicates to ensure unique subsets
        if (i > index && arr[i] == arr[i - 1])
            continue;

        current.push_back(arr[i]);
        backtrack(arr, i + 1, current, subsets);
        current.pop_back();
    }
}

vector<vector<int>> uniqueSubsets(int n, vector<int>& arr) {
    sort(arr.begin(), arr.end());  // Sort the array to handle duplicates
    vector<int> current;
    vector<vector<int>> subsets;
    backtrack(arr, 0, current, subsets);
    return subsets;
}
