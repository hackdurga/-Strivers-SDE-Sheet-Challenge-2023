#include <bits/stdc++.h>
using namespace std;

bool isSafe(vector<vector<int>>& graph, int v, int color, vector<int>& colors) {
    for (int i = 0; i < graph.size(); i++) {
        if (graph[v][i] == 1 && colors[i] == color) {
            return false;
        }
    }
    return true;
}

bool graphColoringUtil(vector<vector<int>>& graph, int m, vector<int>& colors, int v) {
    if (v == graph.size()) {
        return true;
    }

    for (int color = 1; color <= m; color++) {
        if (isSafe(graph, v, color, colors)) {
            colors[v] = color;
            if (graphColoringUtil(graph, m, colors, v + 1)) {
                return true;
            }
            colors[v] = 0;
        }
    }

    return false;
}

string graphColoring(vector<vector<int>>& mat, int m) {
    int V = mat.size();
    vector<int> colors(V, 0);

    if (graphColoringUtil(mat, m, colors, 0)) {
        return "YES";
    } else {
        return "NO";
    }
}
