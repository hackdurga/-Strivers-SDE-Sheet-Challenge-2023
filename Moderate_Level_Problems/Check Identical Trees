#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node class structure:

    template <typename T>

    class BinaryTreeNode {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;
		
        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

***********************************************************/

bool identicalTrees(BinaryTreeNode<int>* root1, BinaryTreeNode<int>* root2) {
    // Base case: If both trees are empty, they are identical
    if (root1 == NULL && root2 == NULL)
        return true;

    // If either tree is empty but the other is not, they are not identical
    if (root1 == NULL || root2 == NULL)
        return false;

    // Check if the current nodes have the same value
    if (root1->data != root2->data)
        return false;

    // Recursively check the left and right subtrees
    bool leftIdentical = identicalTrees(root1->left, root2->left);
    bool rightIdentical = identicalTrees(root1->right, root2->right);

    // Return true only if both subtrees are identical
    return leftIdentical && rightIdentical;
}
