#include <iostream>
#include <vector>
#include <unordered_set>
using namespace std;

int lengthOfLongestConsecutiveSequence(vector<int>& arr, int n) {
    unordered_set<int> numSet;
    int maxLength = 0;
    
    // Add all elements to the hash set
    for (int num : arr) {
        numSet.insert(num);
    }
    
    // Check for each element if it is the start of a sequence
    for (int num : arr) {
        // If num is the start of a sequence
        if (numSet.find(num - 1) == numSet.end()) {
            int currentNum = num;
            int currentLength = 1;
            
            // Count the length of the consecutive sequence
            while (numSet.find(currentNum + 1) != numSet.end()) {
                currentNum++;
                currentLength++;
            }
            
            // Update the maximum length
            maxLength = max(maxLength, currentLength);
        }
    }
    
    return maxLength;
}
