#include <bits/stdc++.h>

/************************************************************

    Following is the linked list node structure.
    
    template <typename T>
    class Node {
        public:
        T data;
        Node* next;

        Node(T data) {
            next = NULL;
            this->data = data;
        }

        ~Node() {
            if (next != NULL) {
                delete next;
            }
        }
    };

************************************************************/

Node<int>* merge(Node<int>* first, Node<int>* second) {
    if (first == NULL) {
        return second;
    }
    if (second == NULL) {
        return first;
    }

    Node<int>* result;
    if (first->data <= second->data) {
        result = first;
        result->next = merge(first->next, second);
    } else {
        result = second;
        result->next = merge(first, second->next);
    }

    return result;
}

Node<int>* sortTwoLists(Node<int>* first, Node<int>* second) {
    if (first == NULL) {
        return second;
    }
    if (second == NULL) {
        return first;
    }

    Node<int>* head;
    if (first->data <= second->data) {
        head = first;
        first = first->next;
    } else {
        head = second;
        second = second->next;
    }

    Node<int>* current = head;
    while (first != NULL && second != NULL) {
        if (first->data <= second->data) {
            current->next = first;
            first = first->next;
        } else {
            current->next = second;
            second = second->next;
        }
        current = current->next;
    }

    if (first != NULL) {
        current->next = first;
    }
    if (second != NULL) {
        current->next = second;
    }

    return head;
}
