#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/
vector<int> verticalOrderTraversal(TreeNode<int> *root) {
    vector<int> result;
    if (root == NULL) {
        return result;
    }

    map<int, vector<int>> verticalLevels;
    queue<pair<TreeNode<int>*, int>> q;
    q.push({root, 0});

    while (!q.empty()) {
        TreeNode<int>* node = q.front().first;
        int level = q.front().second;
        q.pop();

        verticalLevels[level].push_back(node->data);

        if (node->left != NULL) {
            q.push({node->left, level - 1});
        }

        if (node->right != NULL) {
            q.push({node->right, level + 1});
        }
    }

    for (const auto& level : verticalLevels) {
        for (const auto& value : level.second) {
            result.push_back(value);
        }
    }

    return result;
}
