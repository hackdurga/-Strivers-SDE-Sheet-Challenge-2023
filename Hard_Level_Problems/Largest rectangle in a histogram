#include <iostream>
#include <vector>
#include <stack>

using namespace std;

int largestRectangle(vector<int>& heights) {
    int N = heights.size();
    vector<int> left(N, -1);
    vector<int> right(N, N);
    stack<int> st;

    // Calculate 'left' array
    for (int i = 0; i < N; i++) {
        while (!st.empty() && heights[i] <= heights[st.top()]) {
            st.pop();
        }
        if (!st.empty()) {
            left[i] = st.top();
        }
        st.push(i);
    }

    // Clear the stack for reuse
    while (!st.empty()) {
        st.pop();
    }

    // Calculate 'right' array
    for (int i = N - 1; i >= 0; i--) {
        while (!st.empty() && heights[i] <= heights[st.top()]) {
            st.pop();
        }
        if (!st.empty()) {
            right[i] = st.top();
        }
        st.push(i);
    }

    // Calculate the maximum area
    int maxArea = 0;
    for (int i = 0; i < N; i++) {
        int width = right[i] - left[i] - 1;
        int area = width * heights[i];
        maxArea = max(maxArea, area);
    }

    return maxArea;
}
